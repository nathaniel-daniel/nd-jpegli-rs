var searchIndex = new Map(JSON.parse('[\
["nd_jpegli",{"t":"PPGFGFPPFPKPPPPNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Api","Cmyk","ColorSpace","DecompressContext","Error","ErrorString","Jpegli","Luma","ReadSource","Rgb","Source","Unknown","Unsupported","YCbCr","Ycck","as_bytes","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","drop","eq","fill_input_buffer","fill_input_buffer","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","init_source","init_source","input_color_space","input_components","input_dimensions","input_height","input_width","into","into","into","into","into","is_empty","len","new","new","output_color_space","output_components","output_dimensions","output_height","output_scanline","output_width","read_header","read_scanlines","source","start_decompress","to_owned","to_string","to_string","to_string_lossy","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"nd_jpegli"],[93,"nd_jpegli::error_string"],[94,"core::str::error"],[95,"core::result"],[96,"nd_jpegli::decompress_context"],[97,"alloc::string"],[98,"std::io"],[99,"core::fmt"],[100,"nd_jpegli_sys::bindings"],[101,"core::hash"],[102,"core::option"],[103,"core::error"],[104,"alloc::borrow"],[105,"core::any"]],"i":[20,9,0,0,0,0,20,9,0,9,0,9,20,9,9,1,1,11,16,1,20,9,11,16,1,20,9,9,9,9,9,11,9,13,16,1,1,20,20,9,11,16,1,20,20,9,9,9,13,16,11,11,11,11,11,11,16,1,20,9,1,1,11,16,11,11,11,11,11,11,11,11,20,11,9,1,20,1,11,16,1,20,9,11,16,1,20,9,11,16,1,20,9],"f":"```````````````{{{d{b}}}{{d{{h{f}}}}}}{{{d{b}}}{{n{{d{j}}l}}}}{{{d{c}}}{{d{e}}}{}{}}0000{{{d{A`c}}}{{d{A`e}}}{}{}}0000{{{d{Ab}}}Ab}{{{d{c}}{d{A`e}}}Ad{}{}}{{{d{c}}}Ad{}}0{{{d{A`{Af{c}}}}}Ad{}}{{{d{Ab}}{d{Ab}}}Ah}{{{d{A`Aj}}{d{A`{h{f}}}}}{{n{AlAn}}}}{{{d{A`{B`{c}}}}{d{A`{h{f}}}}}{{n{AlAn}}}Bb}{{{d{b}}{d{A`Bd}}}Bf}0{{{d{Bh}}{d{A`Bd}}}Bf}0{{{d{Ab}}{d{A`Bd}}}Bf}{cc{}}00{bBh}11{BjAb}{{{d{Ab}}{d{A`c}}}AdBl}{{{d{A`Aj}}}{{n{AdAn}}}}{{{d{A`{B`{c}}}}}{{n{AdAn}}}Bb}{{{d{{Af{c}}}}}{{Bn{Ab}}}Aj}{{{d{{Af{c}}}}}{{Bn{f}}}Aj}{{{d{{Af{c}}}}}{{Bn{{Cb{C`C`}}}}}Aj}{{{d{{Af{c}}}}}{{Bn{C`}}}Aj}0{ce{}{}}0000{{{d{b}}}Ah}{{{d{b}}}Al}{c{{n{{Af{c}}Bh}}}Aj}{c{{B`{c}}}{}}876555{{{d{A`{Af{c}}}}}{{n{AdBh}}}Aj}{{{d{A`{Af{c}}}}{d{A`{h{{d{A`{h{f}}}}}}}}}{{n{C`Bh}}}Aj}{{{d{Bh}}}{{Bn{{d{Cd}}}}}}2{{{d{c}}}e{}{}}{{{d{c}}}An{}}0{{{d{b}}}{{Cf{j}}}}{c{{n{e}}}{}{}}000000000{{{d{c}}}Ch{}}0000","D":"Dn","p":[[5,"ErrorString",0,93],[1,"reference"],[1,"u8"],[1,"slice"],[1,"str"],[5,"Utf8Error",94],[6,"Result",95],[0,"mut"],[6,"ColorSpace",0],[1,"unit"],[5,"DecompressContext",0,96],[1,"bool"],[10,"Source",0,96],[1,"usize"],[5,"String",97],[5,"ReadSource",0,96],[10,"Read",98],[5,"Formatter",99],[8,"Result",99],[6,"Error",0],[5,"J_COLOR_SPACE",100],[10,"Hasher",101],[6,"Option",102],[1,"u32"],[1,"tuple"],[10,"Error",103],[6,"Cow",104],[5,"TypeId",105]],"r":[[3,96],[5,93],[8,96],[10,96]],"b":[[35,"impl-Display-for-ErrorString"],[36,"impl-Debug-for-ErrorString"],[37,"impl-Display-for-Error"],[38,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADYADQAAAAAAAgAAAAgAAAAKAAAADAAAAA4AAQASABYALAAAAC8AAwA1AAAASQAAAEsAAgBPAA4A"}],\
["nd_jpegli_sys",{"t":"OOOOOOOOOSTTTTTTTTTTTTTTTTTTTTIOOOOSSSSIFFOOOOOOOOOOOOOOSOOOOOOOOOOOOOOOOOOOOOOOOOOOINNNNNNNNNNNNNNNNNNNNOOIIIIOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNOOOOOONNNNNNNNOONNNNNNNNNNOOONNOOOOOOOOOOOOOONNNNNNNNNNOOOIIOOOOOFFFFUFFFOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHHHHHHHHHHHHOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOOOOO","n":["Adobe_transform","Ah","Ah","Al","Al","CCIR601_sampling","CCIR601_sampling","DCT_h_scaled_size","DCT_v_scaled_size","FALSE","JCS_CMYK","JCS_EXT_ABGR","JCS_EXT_ARGB","JCS_EXT_BGR","JCS_EXT_BGRA","JCS_EXT_BGRX","JCS_EXT_RGB","JCS_EXT_RGBA","JCS_EXT_RGBX","JCS_EXT_XBGR","JCS_EXT_XRGB","JCS_GRAYSCALE","JCS_RGB","JCS_RGB565","JCS_UNKNOWN","JCS_YCCK","JCS_YCbCr","JDCT_FLOAT","JDCT_IFAST","JDCT_ISLOW","JDIMENSION","JFIF_major_version","JFIF_major_version","JFIF_minor_version","JFIF_minor_version","JPEGLI_HEADER_OK","JPEGLI_HEADER_TABLES_ONLY","JPEGLI_SUSPENDED","JPEG_EOI","JSAMPARRAY","J_COLOR_SPACE","J_DCT_METHOD","MCU_blocks","MCU_height","MCU_membership","MCU_membership","MCU_rows_in_scan","MCU_rows_in_scan","MCU_sample_width","MCU_width","MCUs_per_row","MCUs_per_row","Se","Se","Ss","Ss","TRUE","X_density","X_density","Y_density","Y_density","ac_huff_tbl_ptrs","ac_huff_tbl_ptrs","ac_tbl_no","access_virt_barray","access_virt_sarray","actual_number_of_colors","addon_message_table","alloc_barray","alloc_large","alloc_sarray","alloc_small","arith_ac_K","arith_ac_K","arith_code","arith_code","arith_dc_L","arith_dc_L","arith_dc_U","arith_dc_U","block_size","block_size","blocks_in_MCU","blocks_in_MCU","boolean","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffered_image","bytes_in_buffer","c_char","c_int","c_uint","c_ulong","cconvert","cconvert","client_data","client_data","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coef","coef","coef_bits","colormap","comp_info","comp_info","completed_passes","component_id","component_index","component_needed","comps_in_scan","comps_in_scan","cquantize","cur_comp_info","cur_comp_info","data_precision","data_precision","dc_huff_tbl_ptrs","dc_huff_tbl_ptrs","dc_tbl_no","dct_method","dct_method","dct_table","density_unit","density_unit","desired_number_of_colors","dest","dither_mode","do_block_smoothing","do_fancy_downsampling","do_fancy_upsampling","downsample","downsampled_height","downsampled_width","emit_message","enable_1pass_quant","enable_2pass_quant","enable_external_quant","entropy","entropy","eq","eq","err","err","error_exit","fdct","fill_input_buffer","first_addon_message","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_message","free_pool","from","from","from","from","from","from","from","from","from","from","global_state","global_state","h_samp_factor","hash","hash","height_in_blocks","i","idct","image_height","image_height","image_width","image_width","in_color_space","init_source","input_components","input_gamma","input_iMCU_row","input_scan_number","inputctl","into","into","into","into","into","into","into","into","into","into","is_baseline","is_decompressor","is_decompressor","j_compress_ptr","j_decompress_ptr","jpeg_color_space","jpeg_color_space","jpeg_height","jpeg_message_table","jpeg_width","jpegli_component_info","jpegli_compress_struct","jpegli_decompress_struct","jpegli_error_mgr","jpegli_error_mgr_msg_parm","jpegli_memory_manager","jpegli_progress_mgr","jpegli_source_mgr","last_addon_message","last_col_width","last_jpeg_message","last_row_height","lim_Se","lim_Se","main","main","marker","marker","marker_list","master","master","max_alloc_chunk","max_h_samp_factor","max_h_samp_factor","max_memory_to_use","max_v_samp_factor","max_v_samp_factor","mem","mem","min_DCT_h_scaled_size","min_DCT_h_scaled_size","min_DCT_v_scaled_size","min_DCT_v_scaled_size","msg_code","msg_parm","natural_order","natural_order","nd_jpegli_create_compress","nd_jpegli_create_decompress","nd_jpegli_destroy_compress","nd_jpegli_destroy_decompress","nd_jpegli_finish_compress","nd_jpegli_finish_decompress","nd_jpegli_free_err_str","nd_jpegli_mem_dest","nd_jpegli_mem_src","nd_jpegli_read_header","nd_jpegli_read_scanlines","nd_jpegli_set_defaults","nd_jpegli_set_quality","nd_jpegli_set_xyb_mode","nd_jpegli_start_compress","nd_jpegli_start_decompress","nd_jpegli_write_scanlines","next_input_byte","next_scanline","num_components","num_components","num_scans","num_warnings","optimize_coding","out_color_components","out_color_space","output_components","output_gamma","output_height","output_iMCU_row","output_message","output_scan_number","output_scanline","output_width","pass_counter","pass_limit","post","prep","progress","progress","progress_monitor","progressive_mode","progressive_mode","q_scale_factor","quant_table","quant_tbl_no","quant_tbl_ptrs","quant_tbl_ptrs","quantize_colors","raw_data_in","raw_data_out","realize_virt_arrays","rec_outbuf_height","request_virt_barray","request_virt_sarray","reset_error_mgr","restart_in_rows","restart_interval","restart_interval","resync_to_restart","s","sample_range_limit","saw_Adobe_marker","saw_JFIF_marker","scale_denom","scale_denom","scale_num","scale_num","scan_info","script_space","script_space_size","self_destruct","skip_input_data","smoothing_factor","src","term_source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_iMCU_rows","total_iMCU_rows","total_passes","trace_level","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two_pass_quantize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unread_marker","upsample","v_samp_factor","width_in_blocks","write_Adobe_marker","write_JFIF_header"],"q":[[0,"nd_jpegli_sys"],[426,"nd_jpegli_sys::bindings"],[427,"core::fmt"],[428,"core::hash"],[429,"core::result"],[430,"core::any"],[431,"core::ffi"]],"i":[7,6,7,6,7,6,7,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,0,6,7,6,7,0,0,0,0,0,0,0,3,3,6,7,6,7,3,3,6,7,6,7,6,7,0,6,7,6,7,6,7,3,12,12,7,8,12,12,12,12,6,7,6,7,6,7,6,7,6,7,6,7,0,3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,9,10,11,12,7,11,0,0,0,0,6,7,6,7,3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,9,10,11,12,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,6,7,7,7,6,7,10,3,3,3,6,7,7,6,7,6,7,6,7,3,6,7,3,6,7,7,6,7,7,6,7,6,3,3,8,7,7,7,6,7,4,5,6,7,8,6,11,8,3,4,5,6,7,10,11,12,8,12,3,4,5,6,7,8,9,10,11,12,6,7,3,4,5,3,9,7,6,7,6,7,6,11,6,6,7,7,7,3,4,5,6,7,8,9,10,11,12,7,6,7,0,0,6,7,6,8,6,0,0,0,0,0,0,0,0,8,3,8,3,6,7,6,7,6,7,7,6,7,12,6,7,12,6,7,6,7,6,7,6,7,8,8,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,6,6,7,6,8,6,7,7,7,7,7,7,8,7,7,7,10,10,7,6,6,7,10,6,7,6,3,3,6,7,7,6,7,12,7,12,12,8,6,6,7,11,9,7,7,7,6,7,6,7,6,6,6,12,11,6,7,11,3,4,5,6,7,8,9,10,11,12,6,7,10,8,3,4,5,6,7,8,9,10,11,12,3,4,5,6,7,8,9,10,11,12,7,3,4,5,6,7,8,9,10,11,12,7,7,3,3,6,6],"f":"`````````````````````````````````````````````````````````````````````````````````````{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{dc}}}{{b{de}}}{}{}}000000000``````````{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{{b{l}}}l}{{{b{n}}}n}{{{b{A`}}}A`}{{{b{Ab}}}Ab}{{{b{Ad}}}Ad}{{{b{Af}}}Af}{{{b{Ah}}}Ah}{{{b{c}}{b{de}}}Aj{}{}}000000000{{{b{c}}}Aj{}}0000000000000000000````````````````````````````````````````{{{b{h}}{b{h}}}Al}{{{b{j}}{b{j}}}Al}``````{{{b{f}}{b{dAn}}}B`}{{{b{h}}{b{dAn}}}B`}{{{b{j}}{b{dAn}}}B`}{{{b{l}}{b{dAn}}}B`}{{{b{n}}{b{dAn}}}B`}{{{b{Ad}}{b{dAn}}}B`}{{{b{Af}}{b{dAn}}}B`}{{{b{Ah}}{b{dAn}}}B`}``{cc{}}000000000```{{{b{h}}{b{dc}}}AjBb}{{{b{j}}{b{dc}}}AjBb}``````````````{ce{}{}}000000000```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}}e{}{}}000000000````{c{{Bd{e}}}{}{}}0000000000000000000`{{{b{c}}}Bf{}}000000000``````","D":"Eb","p":[[1,"reference"],[0,"mut"],[5,"jpegli_component_info",0],[5,"J_COLOR_SPACE",0,426],[5,"J_DCT_METHOD",0,426],[5,"jpegli_compress_struct",0],[5,"jpegli_decompress_struct",0],[5,"jpegli_error_mgr",0],[20,"jpegli_error_mgr_msg_parm",0],[5,"jpegli_progress_mgr",0],[5,"jpegli_source_mgr",0],[5,"jpegli_memory_manager",0],[1,"unit"],[1,"bool"],[5,"Formatter",427],[8,"Result",427],[10,"Hasher",428],[6,"Result",429],[5,"TypeId",430]],"r":[[30,426],[39,426],[40,426],[41,426],[84,426],[107,431],[108,431],[109,431],[110,431],[255,426],[256,426]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIEBBQAAAGsAcABlAOAAEgD9AC4APQFtAA=="}],\
["xtask",{"t":"PPFGNNNNCNNNNNNHNNONNNNNNCCFNNHNNNNNNNFNNCHHHNNCNNNNNPGPPNNNNNHNNNOOPPGPPPPPPPPPPPGNNNNNNNNNNNNNHHHNNNNNNOO","n":["GenerateBindings","GenerateCustomJpegli","Options","Subcommand","borrow","borrow","borrow_mut","borrow_mut","commands","from","from","from_args","from_args","into","into","main","redact_arg_values","redact_arg_values","subcommand","try_from","try_from","try_into","try_into","type_id","type_id","generate_bindings","generate_custom_jpegli","Options","borrow","borrow_mut","exec","from","from_args","into","redact_arg_values","try_from","try_into","type_id","Options","borrow","borrow_mut","cmake_configure_parser","copy_rewrite","exec","extract_gni_string_array","from","from_args","gni_parser","into","redact_arg_values","try_from","try_into","type_id","CmakeDefine","Node","Text","Variable","borrow","borrow_mut","fmt","from","into","parse_cmake_configure","try_from","try_into","type_id","key","value","Comma","Equal","Expr","FunctionCall","Identifier","Int","Int","LeftBracket","LeftParenthesis","List","RightBracket","RightParenthesis","String","String","Token","as_list","as_string","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","from","from","into","into","parse_gni","parse_gni_expr","tokenize_gni","try_from","try_from","try_into","try_into","type_id","type_id","args","name"],"q":[[0,"xtask"],[25,"xtask::commands"],[27,"xtask::commands::generate_bindings"],[38,"xtask::commands::generate_custom_jpegli"],[53,"xtask::commands::generate_custom_jpegli::cmake_configure_parser"],[66,"xtask::commands::generate_custom_jpegli::cmake_configure_parser::Node"],[68,"xtask::commands::generate_custom_jpegli::gni_parser"],[105,"xtask::commands::generate_custom_jpegli::gni_parser::Expr"],[107,"argh"],[108,"core::result"],[109,"anyhow"],[110,"alloc::string"],[111,"alloc::vec"],[112,"core::any"],[113,"cargo_metadata"],[114,"camino"],[115,"std::collections::hash::map"],[116,"core::fmt"],[117,"core::option"],[118,"alloc::vec::into_iter"]],"i":[8,8,0,0,5,8,5,8,0,5,8,5,8,5,8,0,5,8,5,5,8,5,8,5,8,0,0,0,15,15,0,15,15,15,15,15,15,15,0,17,17,0,0,0,0,17,17,0,17,17,17,17,17,20,0,20,20,20,20,20,20,20,0,20,20,20,27,27,24,24,0,18,24,24,18,24,24,18,24,24,24,18,0,18,18,24,18,24,18,24,24,18,24,18,24,18,0,0,0,24,18,24,18,24,18,28,28],"f":"````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0`{cc{}}0{{{b{{h{{b{f}}}}}}{b{{h{{b{f}}}}}}}{{n{jl}}}}{{{b{{h{{b{f}}}}}}{b{{h{{b{f}}}}}}}{{n{A`l}}}}{ce{}{}}0{{}{{Ad{Ab}}}}{{{b{{h{{b{f}}}}}}{b{{h{{b{f}}}}}}}{{n{{Ah{Af}}l}}}}0`{c{{n{e}}}{}{}}000{{{b{c}}}Aj{}}0```98{{AlAn}{{Ad{Ab}}}}8{{{b{{h{{b{f}}}}}}{b{{h{{b{f}}}}}}}{{n{Anl}}}}64332`;:`{{B`B`}{{Ad{Ab}}}}{{AlBb}{{Ad{Ab}}}}{{{b{{Bf{AfBd}}}}{b{f}}}{{Ad{{Ah{Af}}}}}}<{{{b{{h{{b{f}}}}}}{b{{h{{b{f}}}}}}}{{n{Bbl}}}}`:8776````?>{{{b{Bh}}{b{dBj}}}Bl}>;{{{b{f}}}{{Ad{{Ah{Bh}}}}}}998`````````````````{{{b{Bd}}}{{Bn{{b{{h{Bd}}}}}}}}{{{b{Bd}}}{{Bn{{b{f}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{C`}}{b{C`}}}Cb}{{{b{C`}}{b{dBj}}}Bl}{{{b{Bd}}{b{dBj}}}Bl}{cc{}}0{ce{}{}}0{{{b{f}}}{{Ad{{Bf{AfBd}}}}}}{{{b{d{Cd{C`}}}}}{{Ad{Bd}}}}{{{b{f}}}{{Ad{{Ah{C`}}}}}}{c{{n{e}}}{}{}}000{{{b{c}}}Aj{}}0``","D":"Bl","p":[[1,"reference"],[0,"mut"],[1,"str"],[1,"slice"],[5,"Options",0],[5,"EarlyExit",107],[6,"Result",108],[6,"Subcommand",0],[1,"unit"],[8,"Result",109],[5,"String",110],[5,"Vec",111],[5,"TypeId",112],[5,"Metadata",113],[5,"Options",27],[5,"Utf8PathBuf",114],[5,"Options",38],[6,"Expr",68],[5,"HashMap",115],[6,"Node",53],[5,"Formatter",116],[8,"Result",116],[6,"Option",117],[6,"Token",68],[1,"bool"],[5,"IntoIter",118],[15,"CmakeDefine",66],[15,"FunctionCall",105]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFUADAAAAAkADAABABAADwAhAAAAIwAKAC8AAQAyAAQAOAAEAD8ABwBIAAoAVgAGAGQABwA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
